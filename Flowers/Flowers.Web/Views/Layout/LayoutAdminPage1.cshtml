<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN" "http://www.w3.org/TR/html4/loose.dtd">

<html xmlns="http://www.w3.org/1999/xhtml">
<head>
    <meta http-equiv="Content-Type" content="text/html; charset=utf-8" />
    <meta http-equiv="Content-Language" content="zh-CN" />
    <title>@ViewBag.Title</title>
    <!--lovey核心css-->
    <link rel="stylesheet" href="/Content/js/lovey/style/css/lovey.css?__V=1387455242901"
          type="text/css" />
    <link rel="stylesheet" href="/Content/custom_style/custom.css?__V=1387455242901"
          type="text/css" />
    <link rel="stylesheet" href="/Content/custom_style/custom_oa.css?__V=1387455242901"
          type="text/css" />
    <script src="/Content/js/My97DatePicker/WdatePicker.js" type="text/javascript"></script>
    <script src="/Scripts/jquery-1.8.2.min.js" type="text/javascript"></script>
    <script src="/Scripts/common/print.js" type="text/javascript"></script>
    @*  <script src="/Content/ligerUI/js/ligerui.min.js" type="text/javascript"></script>*@
    @RenderSection("head", required: false)@*View页面自定义特定js/css使用*@
    <style type="text/css">
        .datagrid-btn-separator {
            float: none;
            height: 24px;
            border-left: 1px solid #ccc;
            border-right: 1px solid #fff;
            margin: 2px 1px;
        }

        #fm {
            margin: 0;
            padding: 10px 30px;
        }

        .ftitle {
            font-size: 14px;
            font-weight: bold;
            padding: 5px 0;
            margin-bottom: 10px;
            border-bottom: 1px solid #ccc;
        }

        .fitem {
            margin-bottom: 5px;
        }

            .fitem label {
                display: inline-block;
                width: 80px;
            }

        .tab_pageloading {
            position: absolute;
            left: 0;
            top: 0;
            background: #fff url(/Content/js/lovey/style/images/common/loading.gif) no-repeat center;
            width: 100%;
            height: 100%;
            z-index: 99999;
        }
    </style>
    <style type="text/css">

        .subtotal {
            font-weight: bold;
        }
        /*合计单元格样式*/
    </style>
    <script src="/Scripts/layer/layer.min.js"></script>
    <script>

        //指定列求和
        function compute(colName) {
            var rows = $('#dg').datagrid('getRows');
            var total = 0;
            for (var i = 0; i < rows.length; i++) {
                total += parseFloat(rows[i][colName]);
            }
            return fmoney(total, 2);
        }


        //格式化金额
        function fmoney(s, n) {
            n = n > 0 && n <= 20 ? n : 2;
            s = parseFloat((s + "").replace(/[^\d\.-]/g, "")).toFixed(n) + ""; //更改这里n数也可确定要保留的小数位
            var l = s.split(".")[0].split("").reverse(),
                r = s.split(".")[1];
            t = "";
            for (i = 0; i < l.length; i++) {
                t += l[i] + ((i + 1) % 3 == 0 && (i + 1) != l.length ? "," : "");
            }
            return t.split("").reverse().join("") + "." + r.substring(0, 2); //保留2位小数  如果要改动 把substring 最后一位数改动就可
        }

        function SelectStoreEasyui() {
            $.layer({
                type: 2,
                maxmin: true,
                shadeClose: true,
                title: '选择门店',
                shade: [0.1, '#fff'],
                offset: ['10px', ''],
                area: ['400px', ($(window).height() - 50) + 'px'],
                iframe: { src: '/admin/Common/SelectStoreEasyui' }
                , end: function () { }
            });
        }
        function selectCommon(url, title) {
            $.layer({
                type: 2,
                maxmin: true,
                shadeClose: true,
                title: title,
                shade: [0.1, '#fff'],
                offset: ['30px', '520px'],
                area: ['400px', ($(window).height() - 100) + 'px'],
                iframe: { src: url }, end: function () { }
            });
        }
        function SelectStoreEasyuis() {
            $.layer({
                type: 2,
                maxmin: true,
                shadeClose: true,
                title: '选择门店',
                shade: [0.1, '#fff'],
                offset: ['10px', ''],
                area: ['400px', ($(window).height() - 50) + 'px'],
                iframe: { src: '/admin/Common/SelectStoreEasyuis' }
                , end: function () { }
            });
        }

        function SelectStoreEasyuisIn() {
            $.layer({
                type: 2,
                maxmin: true,
                shadeClose: true,
                title: '选择门店',
                shade: [0.1, '#fff'],
                offset: ['10px', ''],
                area: ['400px', ($(window).height() - 50) + 'px'],
                iframe: { src: '/admin/Common/SelectStoreEasyuis?Type=1' }
                , end: function () { }
            });
        }
        function SetCommonExport(url, title) {
            $.layer({
                type: 2,
                maxmin: true,
                shadeClose: true,
                title: title,
                shade: [0.1, '#fff'],
                offset: ['10px', ''],
                area: ['430px', ($(window).height() - 200) + 'px'],
                iframe: { src: url }
                , end: function () { }
            });
        }

        $.extend($.fn.validatebox.defaults.rules, {
            radio: {
                validator: function (value, param) {
                    var frm = param[0], groupname = param[1], ok = false;
                    $('input[name="' + groupname + '"]', document[frm]).each(function () { //查找表单中所有此名称的radio
                        if (this.checked) { ok = true; return false; }
                    });

                    return ok
                },
                message: '需要选择一项！'
            },
            checkbox: {
                validator: function (value, param) {
                    var frm = param[0], groupname = param[1], checkNum = 0;
                    $('input[name="' + groupname + '"]', document[frm]).each(function () { //查找表单中所有此名称的checkbox
                        if (this.checked) checkNum++;
                    });

                    return checkNum > 0 && checkNum < 4;
                },
                message: '选择1~3项！'
            }
        });
        function check(f) {
            var o = $(f.radio1[0]);
            if (!o.validatebox('isValid')) o.parent().addClass('validatebox-invalid');
            else o.parent().removeClass('validatebox-invalid');

            o = $(f.cb1[0]);
            if (!o.validatebox('isValid')) o.parent().addClass('validatebox-invalid');
            else o.parent().removeClass('validatebox-invalid');
            return false
        }
    </script>
</head>
<body>

    <div id="breadcrumb" class="ui_nav_breadcrumb_style02 fixed_top">
        <ul>
            <li><a href="javascript:goIndex()" class="homepage"></a></li>

            @*@Html.Raw(EduZY.Web.CommonHelper.GetCurrentPagePath())*@
            @*   <li><span class="divider"></span>
                    </li><li class="active">基础管理 </li>

                <li><span class="divider"></span>
                    </li><li class="active">系统安全管理 </li>

                <li><span class="divider"></span>
                    </li><li class="active">用户新增</li>*@

        </ul>
        <ul class=" top_toolbar pull_right">
            <li id="back_button"><a href="javascript:back();" class="back">返回</a></li>
            <li><a href="javascript:reload();" class="refresh">刷新</a></li>
            @* <li id="fav_button" class="hidden"><a href="javascript:void(0);" onclick="fav(this);" class="collect">收藏</a></li>
                <li id="unFav_button" class="hidden"><a href="javascript:void(0);" onclick="unFav(this);" class="collect">取消收藏</a></li>*@
            <li><a href="javascript:removetab();" class="close">关闭</a></li>
        </ul>
    </div>
    <script>
        var tabElement = top.$("#content_right");
       // var navtab = tabElement.ligerGetTabManager();
        //var tabid = navtab.getSelectedTabItemID();
       // var liElement = top.$("li[tabid=" + tabid + "]", top.$(".l-tab-links"));

        var taskbarElement = top.$("#taskbar");
       // var taskbar = taskbarElement.loveyGetTaskBarManager();

        taskbarElement.unbind("unFavComplete").bind("unFavComplete", function (event, taskid) {
            if (taskid != tabid) {
                return;
            }
            toggleFavButton(false);
        })

        taskbarElement.unbind("favComplete").bind("favComplete", function (event, taskid) {
            if (taskid != tabid) {
                return;
            }
            toggleFavButton(true);
        })

        function goIndex() {
            navtab.selectTabItem("-1");
        }

        //返回列表页面
        function back() {
            var historyUrl = liElement.attr("url");
            window.location.href = historyUrl;
        }

        //刷新当前选中的tab
        function reload() {
            window.location.reload(true);
        }

        function removetab() {
            navtab.removeTabItem(navtab.getSelectedTabItemID());
            //当tab关闭后，只留有首页tab时，自动刷新
            if (navtab != null && navtab.getTabItemCount() == 1) {
                navtab.reload(-1);
            }
        }

        //收藏当前选中的TAB
        function fav() {
            taskbar.addTaskBar({
                taskid: liElement.attr("tabid"),
                url: liElement.attr("url"),
                title: liElement.attr("title"),
                icon: liElement.attr("menupic")
            });
        }

        //取消收藏的tab
        function unFav(clickObj) {
            taskbar.removeTaskBar(navtab.getSelectedTabItemID());
        }

        function needShowBackButton() {
            //var tabUrl = liElement.attr("url");
            var currentUrl = window.location.href;

            //if (tabUrl.indexOf("?") > -1) {
            //    tabUrl = tabUrl.substring(0, tabUrl.indexOf("?"));
            //}

            //if (currentUrl.indexOf("?") > -1) {
            //    currentUrl = currentUrl.substring(0, currentUrl.indexOf("?"));
            //}

            //if (currentUrl.indexOf(tabUrl) == -1) {
            //    return true;
            //}

            return false;
        }

        $(document).ready(function () {
            //动态控制返回按钮
            if (needShowBackButton()) {
                $("#back_button").removeClass("hidden");
            }

            //动态控制收藏和取消收藏
        //    $.ajax({
        //        dataType: "json",
        //        url: "/module/isCollect.do?pkId=" + liElement.attr("tabid") + "&v=" + new Date().getTime(),
        //        success: function (data) {
        //            toggleFavButton(data.isCollect);
        //        }
        //    })
        //})

        function toggleFavButton(isFav) {
            if (isFav) {
                $("#fav_button").hide();
                $("#unFav_button").show();
            } else {
                $("#fav_button").show();
                $("#unFav_button").hide();
            }
        }
    </script>
    <div id="content" style=" clear:both;margin-top: 29px;">
        @RenderBody()
    </div>


    <script type="text/javascript">
        var isIe6 = navigator.appName == "Microsoft Internet Explorer" && navigator.appVersion.split(";")[1].replace(/[ ]/g, "") == "MSIE6.0";
        var isShowQueryArea = false;  //查询区域默认为展开

        //刷新制定tab
        function refresh() {
            navtab.reload(navtab.getSelectedTabItemID());
        }

        $(function () {
            //             $("#dlg").hide();
        });

        function setCookie(name, value) {
            var exdate = new Date();
            exdate.setDate(exdate.getDate() + 30);
            document.cookie = name + "=" + value + ";expires=" + exdate.toGMTString() + ";path=/";
        }

        function timeTransformation(timestr, timeformat) {
            var _timestr;
            try {
                var _reg = /\/Date\(\d+\)\//;

                if (_reg.test(timestr)) {
                    _timestr = eval('new ' + timestr.replace(/\//g, ''));
                } else {
                    _timestr = timestr.replace(/-/g, "/");
                    _timestr = new Date(_timestr);
                }
                timeformat = "yyyy-mm-dd hh:ff:ss";
                if (/^.*(yyyy|mm|dd|hh|ff|ss).*$/.test(timeformat)) {
                    var month = _timestr.getMonth() + 1 < 10 ? "0" + (_timestr.getMonth() + 1) : _timestr.getMonth() + 1;
                    var currentDate = _timestr.getDate() < 10 ? "0" + _timestr.getDate() : _timestr.getDate();
                    var currenthour = _timestr.getHours() < 10 ? "0" + _timestr.getHours() : _timestr.getHours();
                    var currentmunite = _timestr.getMinutes() < 10 ? "0" + _timestr.getMinutes() : _timestr.getMinutes();
                    var currentsecond = _timestr.getSeconds() < 10 ? "0" + _timestr.getSeconds() : _timestr.getSeconds();
                    _timestr = timeformat.replace(/yyyy/g, _timestr.getFullYear()).replace(/mm/g, month).replace(/dd/g, currentDate).replace(/hh/g, currenthour).replace(/ff/g, currentmunite).replace(/ss/g, currentsecond);
                } else {
                    var datenow = new Date();
                    var divNum = 1000 * 60;
                    var timevalue = parseInt((datenow.getTime() - _timestr.getTime()) / parseInt(divNum));
                    switch (true) {
                        case timevalue < 10:
                            _timestr = "刚刚"; break;
                        case timevalue >= 10 && timevalue < 30:
                            _timestr = Math.floor(timevalue) + "分钟前"; break;
                        case 30 <= timevalue && timevalue < 60:
                            _timestr = "半小时前"; break;
                        case 60 <= timevalue && timevalue < 60 * 24:
                            _timestr = Math.floor(timevalue / 60) + "小时前"; break;
                        case 60 * 24 <= timevalue && timevalue < 60 * 24 * 7:
                            _timestr = Math.floor(timevalue / 60 / 24) + "天前"; break;
                        case 60 * 24 * 7 <= timevalue && timevalue < 60 * 24 * 7 * 4:
                            _timestr = Math.floor(timevalue / 60 / 24 / 7) + "周前"; break;
                        default:
                            var month = _timestr.getMonth() + 1 < 10 ? "0" + (_timestr.getMonth() + 1) : _timestr.getMonth() + 1;
                            var currentDate = _timestr.getDate() < 10 ? "0" + _timestr.getDate() : _timestr.getDate();
                            _timestr = _timestr.getFullYear() + "-" + month + "-" + currentDate;
                            break;
                    }
                }
            }
            catch (ee) { var i = ee; }
            return _timestr;
        }
    </script>
</body>
</html>
